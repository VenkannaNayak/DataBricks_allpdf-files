Input : arr = {1, 2, 3, 4, 5, 6}
Output :Even index positions sum 9
        Odd index positions sum 12
 
Explanation: Here, n = 6 so there will be 3 even 
index positions and 3 odd index positions in an array
Even = 1 + 3 + 5 = 9
Odd =  2 + 4 + 6 = 12

arr = [1, 2, 3, 4, 5, 6]

even_sum = sum(arr[i] for i in range(len(arr)) if i % 2 == 0)
odd_sum = sum(arr[i] for i in range(len(arr)) if i % 2 != 0)

print("Even index positions sum:", even_sum)
print("Odd index positions sum:", odd_sum)

-------------------------------------------------------

create table emp
(
country varchar(50)
)
insert into emp values('india'),('pak'),('aus')

how to calculate the percentage of population either increasing and decreasing in sql?

SELECT
    (current_year.population - previous_year.population) / previous_year.population * 100 AS population_change_percentage
FROM
    population_data AS current_year
JOIN
    population_data AS previous_year ON current_year.year = previous_year.year + 1

--------------------------------------------------------------------------------
PIVOT AND UNPIVOT:

PIVOT:it does mean that the converting of data into rows to columns

select q1,q2,q3,q4 from emp PIVOT (
SUM(sales)
for quarter in (q1,q2,q3,q4)
)as as_pivot_the_sales

UNPIVOT:It means the data into the columns into the rows which is called as UNPIVOT

select quarter[q1,q2,q2] from emp
UNPIVOT
(
sum(sales)
for querter in [q1,q2,q3,q4] from emp
)as unpivot_tables

audit log and antilogs tables:

audit log tables:
audit log is a collection of data historicallly changes into the data set in the form of delete,select,and update

anti log:it is revers storage of data into the dataset in the form of delete,select and update etc

Explode function:it is the form of array or map of multiple rows and columns split into seperated 
columns/rows which is called as explode 

Zordering :
skipping the data into physically and reduced the amount of data in deltatables
ex: select*from emp where eno=1-->1,2,3
select*from emp where eno=1-->1,2-->zordering etc.
select optimize scd2demo zorder pk.

update emp gender=
case
when gender='female' then 'male',
when gender='male' then 'female'
else gender
end

select t1.country +'Vs'+t2.country from emp as t1 join emp as t2 on t1.country==t2.country

WITH cte AS (
  SELECT column1, column2, column3
  FROM your_table
  WHERE condition
)
CREATE OR REPLACE VIEW your_view AS
SELECT column1, column2
FROM cte
WHERE column3 = 'value';

select z.* from emp as z where sal>(select avg(sal) from emp where deptino=z.deptno)


select * from emp as lesorgreter



















